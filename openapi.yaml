openapi: 3.0.1
info:
  title: Agenda de Salones de Eventos API
  description: "API para gestionar salones, reservas, eventos y autenticación"
  contact:
    name: InnovaPro
    email: iyate@estudiante.uniajc.edu.co
  version: v1
servers:
- url: http://localhost:8080
  description: Generated server url
security:
- bearerAuth: []
tags:
- name: Reservas
  description: Gestión de reservas de salones de eventos
- name: Salones
  description: Gestión de salones de eventos
- name: Auth
  description: Autenticación y gestión de usuarios
- name: Eventos
  description: Gestión de eventos y actividades
- name: Home
  description: Información general y estado de la API
paths:
  /api/salones:
    get:
      tags:
      - Salones
      summary: Listar salones
      description: Obtiene todos los salones disponibles con filtros opcionales por
        capacidad y disponibilidad
      operationId: listarSalones
      parameters:
      - name: disponible
        in: query
        required: false
        schema:
          type: boolean
      - name: capacidad
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Listado de salones obtenido correctamente
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Salon"
    post:
      tags:
      - Salones
      summary: Crear salón
      description: Registra un nuevo salón en el sistema
      operationId: crearSalon
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Salon"
        required: true
      responses:
        "201":
          description: Salón creado correctamente
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Datos de entrada inválidos
          content:
            '*/*':
              schema:
                type: object
  /api/reservas:
    get:
      tags:
      - Reservas
      summary: Listar reservas
      description: Devuelve el listado completo de reservas
      operationId: listarReservas
      responses:
        "200":
          description: Listado de reservas obtenido correctamente
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Reserva"
    post:
      tags:
      - Reservas
      summary: Crear reserva
      description: Registra una nueva reserva en el sistema
      operationId: crearReserva
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Reserva"
        required: true
      responses:
        "201":
          description: Reserva creada correctamente
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Datos de entrada inválidos
          content:
            '*/*':
              schema:
                type: object
  /api/eventos:
    get:
      tags:
      - Eventos
      summary: Listar eventos
      description: "Retorna la lista completa de eventos disponibles, con filtros\
        \ opcionales por lugar o fecha"
      operationId: listarEventos
      parameters:
      - name: lugar
        in: query
        required: false
        schema:
          type: string
      - name: fecha
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Listado de eventos obtenido correctamente
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Evento"
    post:
      tags:
      - Eventos
      summary: Crear evento
      description: Permite crear un nuevo evento. Se valida que los campos principales
        no estén vacíos
      operationId: crearEvento
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Evento"
        required: true
      responses:
        "400":
          description: Datos de evento incompletos o inválidos
          content:
            '*/*':
              schema:
                type: object
        "201":
          description: Evento creado correctamente
          content:
            '*/*':
              schema:
                type: object
  /api/auth/register:
    post:
      tags:
      - Auth
      summary: Registrar usuario
      description: Crea una nueva cuenta de usuario
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsuarioDTO"
        required: true
      responses:
        "201":
          description: Usuario creado correctamente
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Datos inválidos o usuario ya existe
          content:
            '*/*':
              schema:
                type: object
  /api/auth/login:
    post:
      tags:
      - Auth
      summary: Login
      description: Autentica un usuario y devuelve token simulado
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: Autenticación exitosa
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Credenciales inválidas
          content:
            '*/*':
              schema:
                type: object
  /api:
    get:
      tags:
      - Home
      summary: Información base
      description: "Mensaje de bienvenida, versión y lista de endpoints disponibles"
      operationId: home
      responses:
        "200":
          description: Información obtenida correctamente
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/salones/{id}:
    get:
      tags:
      - Salones
      summary: Obtener salón por ID
      description: Devuelve un salón específico según su identificador
      operationId: obtenerSalon
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Salón encontrado
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Salón no encontrado
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - Salones
      summary: Eliminar salón
      description: Elimina un salón según su identificador
      operationId: eliminarSalon
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Salón eliminado correctamente
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "404":
          description: Salón no encontrado
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/reservas/{id}:
    get:
      tags:
      - Reservas
      summary: Obtener reserva por ID
      description: Devuelve una reserva específica por su identificador
      operationId: obtenerReserva
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Reserva encontrada
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Reserva no encontrada
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - Reservas
      summary: Eliminar reserva
      description: Elimina una reserva por su identificador
      operationId: eliminarReserva
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Reserva eliminada correctamente
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "404":
          description: Reserva no encontrada
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/eventos/{id}:
    get:
      tags:
      - Eventos
      summary: Obtener evento por ID
      description: Retorna un evento específico de acuerdo con el identificador solicitado
      operationId: obtenerEvento
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Evento encontrado
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Evento no encontrado
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - Eventos
      summary: Eliminar evento
      description: Elimina un evento según su identificador
      operationId: eliminarEvento
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Evento no encontrado
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: Evento eliminado correctamente
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/auth/usuarios:
    get:
      tags:
      - Auth
      summary: Listar usuarios (demo)
      description: Devuelve lista de usuarios sin contraseñas
      operationId: listarUsuarios
      responses:
        "200":
          description: Listado de usuarios
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UsuarioDTO"
components:
  schemas:
    Salon:
      required:
      - capacidad
      - disponible
      - id
      - nombre
      - ubicacion
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
        capacidad:
          type: integer
          format: int32
        ubicacion:
          type: string
        disponible:
          type: boolean
    Reserva:
      required:
      - cliente
      - estado
      - evento
      - fecha
      - id
      - salon
      type: object
      properties:
        id:
          type: integer
          format: int64
        cliente:
          type: string
        evento:
          type: string
        salon:
          type: string
        fecha:
          type: string
        estado:
          type: string
    Evento:
      required:
      - capacidad
      - fecha
      - id
      - lugar
      - nombre
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
        fecha:
          type: string
        lugar:
          type: string
        capacidad:
          type: integer
          format: int32
    UsuarioDTO:
      required:
      - email
      - nombre
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
        email:
          type: string
        password:
          type: string
    LoginRequest:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
